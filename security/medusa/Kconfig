source "security/medusa/testing/Kconfig"

config SECURITY_MEDUSA
	bool "MEDUSA Support"
	depends on SECURITY && AUDIT
	select NETWORK_SECMARK
	default n
	help
	  This selects MEDUSA LSM.

if SECURITY_MEDUSA

config SECURITY_MEDUSA_VS
        int "Number of bits representing Virtual Spaces (VS)"
        default 96
        range 32 512
        depends on SECURITY_MEDUSA
        help
	  Medusa Communication Protocol transfers size of attributes in Bytes.
	  To prevent a mistake and errornous interpretation of bits out of
	  bitarray, the array size SEURITY_MEDUSA_VS must be a multiple of 8.

config SECURITY_MEDUSA_ACT
        int "Number of bits representing triggered security hooks"
        default 64
        range 32 512
        depends on SECURITY_MEDUSA
        help
	  Medusa Communication Protocol transfers size of attributes in Bytes.
	  To prevent a mistake and errornous interpretation of bits out of
	  bitarray, the array size SEURITY_MEDUSA_ACT must be a multiple of 8.

config SECURITY_MEDUSA_L4_CONSTABLE
        tristate "MEDUSA L4 as MODULE"
        depends on SECURITY_MEDUSA
        default y
        help
          Compiles l4 on medusa as module. Good for debug purposes.

          If unsure do not touch.

config SECURITY_MEDUSA_TESTING
	bool "MEDUSA Test Support"
	depends on SECURITY_MEDUSA && KUNIT

config SECURITY_MEDUSA_MONITOR_KTHREADS
	bool "Monitor kernel threads"
	depends on SECURITY_MEDUSA
	default n
	help
	  If set, kernel threads are monitored by Medusa LSM.
	  By default, this functionality is turned off.

config SECURITY_MEDUSA_HOOKS_TASK_KILL
	bool "Enable LSM hook task_kill"
	depends on SECURITY_MEDUSA
	default y
	help
	  If set, enables task_kill LSM security hook.

config SECURITY_MEDUSA_KILL_RESCHEDULING
	bool "Enable rescheduling in task_kill LSM hook"
	depends on SECURITY_MEDUSA
	depends on SECURITY_MEDUSA && SECURITY_MEDUSA_HOOKS_TASK_KILL
	imply PREEMPT_CPU
	imply LOCKDEP
	default n
	help
	  If set, turns on PREEMPT_CPU and LOCKDEP to enable rescheduling in
	  the task_kill LSM hook. Rescheduling is possible only in specific
	  cases of signal sending (e.g. when sending a signal to a single
	  process, not a group) and serves only for security context
	  initialization of the sender/receiver. So this feature is suitable
	  for debugging purposes only.

	  If unsure, say N.

config SECURITY_MEDUSA_FUCK_HASH_TABLE_SIZE
	int "Number of buckets"
	depends on SECURITY_MEDUSA
	default 3
	help
		Defines the number of buckets a FUCK hash table stored in
		inode_security has.

choice
	prompt "FUCK hashing function"

# config SECURITY_MEDUSA_FUCK_GHASH
# 	bool "GHASH"
# 	depends on SECURITY_MEDUSA && CRYPTO_GHASH

config SECURITY_MEDUSA_FUCK_BLAKE2B_256
	bool "Blake2b-256"
	depends on SECURITY_MEDUSA && (CRYPTO_BLAKE2B=y)
	help
	  According to www.blake2.net: A cryptographic hash function faster
	  than MD5, SHA-1, SHA-2 and SHA-3, yet is at least as secure as the
	  latest standard SHA-3.
	  Optimized for 64-bit platforms. Produces 32 bytes long digests.

config SECURITY_MEDUSA_FUCK_BLAKE2B_512
	bool "Blake2b-512"
	depends on SECURITY_MEDUSA && (CRYPTO_BLAKE2B=y)
	help
	  According to www.blake2.net: A cryptographic hash function faster
	  than MD5, SHA-1, SHA-2 and SHA-3, yet is at least as secure as the
	  latest standard SHA-3.
	  Optimized for 64-bit platforms. Produces 64 bytes long digests.

config SECURITY_MEDUSA_FUCK_BLAKE2S_256
	bool "Blake2s-256"
	depends on SECURITY_MEDUSA && (CRYPTO_BLAKE2S=y)
	help
	  According to www.blake2.net: A cryptographic hash function faster
	  than MD5, SHA-1, SHA-2 and SHA-3, yet is at least as secure as the
	  latest standard SHA-3.
	  Optimized for 8- to 32-bit platforms. Produces 32 bytes long digests.

# config SECURITY_MEDUSA_FUCK_POLY1305
# 	bool "POLY1305"
# 	depends on SECURITY_MEDUSA && CRYPTO_POLY1305

config SECURITY_MEDUSA_FUCK_SHA2_256
	bool "SHA2-256"
	depends on SECURITY_MEDUSA && (CRYPTO_SHA256=y)
	help
	  Cryptograhpically secure

config SECURITY_MEDUSA_FUCK_SHA2_512
	bool "SHA2-512"
	depends on SECURITY_MEDUSA && (CRYPTO_SHA512=y)
	help
	  Cryptographically secure. Usually faster than SHA256 on 64 bit machines

config SECURITY_MEDUSA_FUCK_SHA3_256
	bool "SHA3-256"
	depends on SECURITY_MEDUSA && (CRYPTO_SHA3=y)
	help
	  Slower than SHA-2 algorithms, but more secure. Choose if you want more
	  protection than SHA-2 offers.

config SECURITY_MEDUSA_FUCK_SHA3_512
	bool "SHA3-512"
	depends on SECURITY_MEDUSA && (CRYPTO_SHA3=y)
	help
	  Slower than SHA-2 algorithms, but more secure. Choose if you want more
	  protection than SHA-2 offers.

# config SECURITY_MEDUSA_FUCK_SM3
# 	bool "SM3"
# 	depends on SECURITY_MEDUSA && CRYPTO_SM3

# config SECURITY_MEDUSA_FUCK_STREEBOG
# 	bool "STREEBOG"
# 	depends on SECURITY_MEDUSA && CRYPTO_STREEBOG

# config SECURITY_MEDUSA_FUCK_WHIRLPOOL512
# 	bool "WHIRLPOOL512"
# 	depends on SECURITY_MEDUSA && CRYPTO_WP512

endchoice

endif # if SECURITY_MEDUSA
